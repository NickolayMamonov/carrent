// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Car {
  id          String    @id @default(cuid())
  make        String
  model       String
  year        Int
  pricePerDay Decimal   @db.Decimal(10, 2)
  type        String
  images      String[]
  features    String[]
  availability Boolean  @default(true)
  description String?   @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  bookings    Booking[]

  specifications CarSpecification?

  @@index([make, model])
  @@index([type])
  @@index([availability])
}

model CarSpecification {
  id           String  @id @default(cuid())
  transmission String?
  fuelType     String?
  seats        Int?
  luggage      Int?
  mileage      String?
  car          Car     @relation(fields: [carId], references: [id], onDelete: Cascade)
  carId        String  @unique

  @@index([transmission])
  @@index([fuelType])
}

model Booking {
  id          String   @id @default(cuid())
  startDate   DateTime
  endDate     DateTime
  totalPrice  Decimal  @db.Decimal(10, 2)
  status      String   @default("pending") // pending, confirmed, cancelled, completed
  car         Car      @relation(fields: [carId], references: [id])
  carId       String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  extras     BookingExtras?

  @@index([userId])
  @@index([status])
  @@index([startDate, endDate])
}

model BookingExtras {
  id              String  @id @default(cuid())
  gps             Boolean @default(false)
  childSeat       Boolean @default(false)
  additionalDriver Boolean @default(false)
  booking         Booking @relation(fields: [bookingId], references: [id], onDelete: Cascade)
  bookingId       String  @unique
}